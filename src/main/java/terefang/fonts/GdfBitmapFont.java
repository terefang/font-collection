package terefang.fonts;/*
 * Copyright (c) 2018. terefang@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.badlogic.gdx.assets.loaders.FileHandleResolver;
import com.badlogic.gdx.files.FileHandle;
import com.badlogic.gdx.graphics.Pixmap;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.TextureData;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.Gdx2DPixmap;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.graphics.glutils.PixmapTextureData;
import lombok.SneakyThrows;


import java.io.*;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.zip.GZIPInputStream;

public class GdfBitmapFont extends BitmapFont
{
	public static final BitmapFont create8x16() throws IOException
	{
		return create(AVGA2_8x16.table, AVGA2_8x16.start, AVGA2_8x16.width);
	}
	
	public static final BitmapFont create8x14() throws IOException
	{
		return create(AVGA2_8x14.table, AVGA2_8x14.start, AVGA2_8x14.width);
	}
	
	public static final BitmapFont create8x8() throws IOException
	{
		return create((FileHandle)null, "8x8");
	}
	
	public static final BitmapFont create6x11() throws IOException
	{
		return create((FileHandle)null, "6x11");
	}
	
	public static final BitmapFont create(int[][] table, int start, int cwidth)
	{
		BitmapFontData data = new BitmapFontData();
		
		Gdx2DPixmap pixmap = createFromInternal(data, table, start, table.length, table[0].length, cwidth, nextPowerOf2(cwidth), nextPowerOf2(table[0].length));

		Texture texture = new Texture((TextureData) (new PixmapTextureData(new Pixmap(pixmap), (Pixmap.Format) null, false, true)));
		TextureRegion region = new TextureRegion(texture);
		
		return new GdfBitmapFont(data, region);
	}

	@SneakyThrows
	public static GdfBitmapFont create(FileHandle res)
	{
		return create(res, null);
	}

	@SneakyThrows
	public static GdfBitmapFont create(FileHandle res, String fileName)
	{
		BitmapFontData data = new BitmapFontData();
		Gdx2DPixmap pixmap = null;
		InputStream ins = null;
		if(fileName == null) fileName = res.name();

		if(res != null)
		{
			try
			{
				ins = res.read();
			}
			catch(Exception xe)
			{
				res = null;
				ins = null;
			}
		}

		if("8x8".equalsIgnoreCase(fileName))
		{
			pixmap = createFromInternal(data, Ascii_8x8.table, Ascii_8x8.start, Ascii_8x8.table.length, Ascii_8x8.table[0].length, Ascii_8x8.width, Ascii_8x8.wstep, Ascii_8x8.hstep);
		}
		else if("6x11".equalsIgnoreCase(fileName))
		{
			pixmap = createFromInternal(data, Ascii_6x11.table, Ascii_6x11.start, Ascii_6x11.table.length, Ascii_6x11.table[0].length, Ascii_6x11.width, Ascii_6x11.wstep, Ascii_6x11.hstep);
		}
		else if(fileName == null || ins == null)
		{
			pixmap = createFromInternal(data, Ascii_6x11.table, Ascii_6x11.start, Ascii_6x11.table.length, Ascii_6x11.table[0].length, Ascii_6x11.width, Ascii_6x11.wstep, Ascii_6x11.hstep);
		}
		else if(fileName.endsWith(".gdfa"))
		{
			pixmap = createFromGDFA(data, ins);
		}
		else if(fileName.endsWith(".gdfa.gz"))
		{
			ins = new GZIPInputStream(ins);
			pixmap = createFromGDFA(data, ins);
		}
		else if(fileName.endsWith(".gdf"))
		{
			pixmap = createFromGDFB(data, ins, false);
		}
		else if(fileName.endsWith(".gdf.gz"))
		{
			ins = new GZIPInputStream(ins);
			pixmap = createFromGDFB(data, ins, false);
		}
		else if(fileName.endsWith(".gdfx"))
		{
			pixmap = createFromGDFB(data, ins, true);
		}
		else if(fileName.endsWith(".gdfx.gz"))
		{
			ins = new GZIPInputStream(ins);
			pixmap = createFromGDFB(data, ins, true);
		}
		else
		{
			throw new IllegalArgumentException("Unknown Font Format = " + fileName);
		}

		Texture texture = new Texture((TextureData) (new PixmapTextureData(new Pixmap(pixmap), (Pixmap.Format) null, false, true)));
		TextureRegion region = new TextureRegion(texture);
		GdfBitmapFont _gdf = new GdfBitmapFont(data, region);
		_gdf.setUseIntegerPositions(true);
		_gdf.setOwnsTexture(true);
		return _gdf;
	}

	public static final BitmapFont create(FileHandleResolver resolver, String fileName) throws IOException
	{
		return create(resolver.resolve(fileName), fileName);
	}
	
	public static final Gdx2DPixmap createPixmap(int w, int h)
	{
		Gdx2DPixmap p = new Gdx2DPixmap(w, h, Gdx2DPixmap.GDX2D_FORMAT_LUMINANCE_ALPHA);
		p.clear(0);
		return p;
	}
	
	public static final void setBmData(BitmapFontData data, int startChar, int numChars, int charH, int charW, int charHstep, int charWstep, int charsPerRow, int[] charWadvance)
	{
		data.padTop = 0;
		data.padRight = 0;
		data.padBottom = 0;
		data.padLeft = 0;
		data.lineHeight = charH;
		data.imagePaths = new String[0];
		data.descent = 0.0F;
		data.spaceXadvance = (float) charW;
		//data.spaceWidth = (float) charW;
		data.xHeight = (charH / 2) + 1;
		data.capHeight = charH;
		data.ascent = 0;
		data.down = -data.lineHeight;
		data.descent = 0;
		data.flipped = false;

		Glyph glyph;
		int ci = 0;
		for(int c = startChar; c < (numChars + startChar); c++)
		{
			glyph = new Glyph();
			glyph.id = c;
			if(charWadvance != null)
			{
				glyph.xadvance = charWadvance[ci];
			}
			else
			{
				glyph.xadvance = charW;
			}
			glyph.fixedWidth = true;
			glyph.height = charH;
			glyph.width = charW;
			glyph.srcX = (ci % charsPerRow) * charWstep;
			glyph.srcY = (ci / charsPerRow) * charHstep;
			glyph.xoffset = 0;
			glyph.yoffset = -charH;
			glyph.page = 0;
			data.setGlyph(glyph.id, glyph);
			ci++;
		}
		data.missingGlyph = data.getGlyph((char) 0);
		if(data.missingGlyph == null)
		{
			data.missingGlyph = data.getGlyph(' ');
		}
	}
	
	public static final Gdx2DPixmap createFromInternal(BitmapFontData data, int[][] asciiTable,
													   int startChar,
													   int numChars,
													   int charH,
													   int charW,
													   int charWstep,
													   int charHstep)
	{
		
		Gdx2DPixmap pixmap = createPixmap(256, 256);
		
		setBmData(data, startChar, numChars, charH, charW, charHstep, charWstep, 16, null);
		
		for(int c = startChar; c < (startChar + numChars); c++)
		{
			Glyph glyph = data.getGlyph((char) c);
			int srcX = glyph.srcX;
			int srcY = glyph.srcY;
			for(int y = 0; y < charH; y++)
			{
				int mask = 0x80;
				for(int x = 0; x < charW; x++)
				{
					pixmap.setPixel(srcX + x, srcY + y, ((asciiTable[c - startChar][y] & mask) == 0 ? 0 : 0xFFFFffff));
					mask >>= 1;
				}
			}
		}
		return pixmap;
	}
	
	public static int nextPowerOf2(int a)
	{
		int b = 1;
		while(b < a)
		{
			b <<= 1;
		}
		return b;
	}
	
	public static final Gdx2DPixmap createFromGDFA(BitmapFontData data, InputStream ins) throws IOException
	{
		Gdx2DPixmap pixmap = null;
		int startChar = 0;
		int numChars = 0;
		int charW = 0;
		int charH = 0;
		
		StreamTokenizer st = new StreamTokenizer(ins);
		st.slashStarComments(true);
		st.slashSlashComments(true);
		st.parseNumbers();
		st.whitespaceChars(0, 0x20);
		st.whitespaceChars(',', ',');
		st.wordChars(0x40, 0x5A);
		st.wordChars(0x60, 0x7A);
		
		st.nextToken();
		if("GDFA".equalsIgnoreCase(st.sval))
		{
			st.nextToken();
			startChar = (int) st.nval;
			st.nextToken();
			numChars = (int) st.nval;
			st.nextToken();
			charW = (int) st.nval;
			st.nextToken();
			charH = (int) st.nval;
			
			int charWstep = nextPowerOf2(charW);
			int charHstep = nextPowerOf2(charH);
			
			int numpChars = nextPowerOf2(numChars);
			int totalArea = nextPowerOf2(charHstep * charWstep * numpChars);
			int texRes = Integer.numberOfTrailingZeros(totalArea) + 1;
			texRes /= 2;
			texRes = 1 << texRes;
			int charPerRow = texRes / charWstep;
			
			pixmap = createPixmap(texRes, texRes);
			
			setBmData(data, startChar, numChars, charH, charW, charHstep, charWstep, charPerRow, null);
			
			int ci = 0;
			for(int c = startChar; c < (startChar + numChars); c++)
			{
				Glyph glyph = data.getGlyph((char) c);
				int srcX = glyph.srcX;
				int srcY = glyph.srcY;
				for(int y = 0; y < charH; y++)
				{
					for(int x = 0; x < charW; x++)
					{
						st.nextToken();
						pixmap.setPixel(srcX + x, srcY + y, (st.nval == 0 ? 0 : 0xFFFFffff));
					}
				}
				ci++;
			}
			ins.close();
		}
		else
		{
			throw new IllegalArgumentException("Unknown Font Format = " + st.sval);
		}
		return pixmap;
	}
	
	public static final Gdx2DPixmap createFromGDFB(BitmapFontData data, InputStream ins, boolean extendedFormat) throws IOException
	{
		/* Only supports a architecture-dependent binary dump format
		 * at the moment.
		 * The file format is like this on machines with 32-byte integers:
		 *
		 * byte 0-3:   (int) number of characters in the font
		 * byte 4-7:   (int) value of first character in the font (often 32, space)
		 * byte 8-11:  (int) pixel width of each character
		 * byte 12-15: (int) pixel height of each character
		 * bytes 16-:  (char) array with character data, one byte per pixel
		 *                    in each character, for a total of
		 *                    (nchars*width*height) bytes.
		 */
		/*---
		 *
		 *  extended format has byte[numofChars] charAdvanceWidth @ 0x10
		 *  character data follows and is considered greyscale (anti-aliased)
		 *  but 0x01 is considered full color in lecacy/interim mode.
		 *
		 */
		EndianDataInputStream edis = new EndianDataInputStream(ins);
		edis.order(ByteOrder.BIG_ENDIAN);
		int numChars = edis.readInt();
		if(numChars != (numChars & 0xffff))
		{
			edis.order(ByteOrder.LITTLE_ENDIAN);
			numChars = ((numChars >>> 24) & 0xff) | ((numChars >>> 8) & 0xff00);
		}
		
		int startChar = edis.readInt();
		int charW = edis.readInt();
		int charH = edis.readInt();
		
		int charWstep = nextPowerOf2(charW);
		int charHstep = nextPowerOf2(charH);
		
		int numpChars = nextPowerOf2(numChars);
		int totalArea = nextPowerOf2(charHstep * charWstep * numpChars);
		int texRes = Integer.numberOfTrailingZeros(totalArea) + 1;
		texRes /= 2;
		texRes = 1 << texRes;
		int charPerRow = texRes / charWstep;
		
		Gdx2DPixmap pixmap = createPixmap(texRes, texRes);
		
		// ext format contains real char widths in front of bitmap data
		if(extendedFormat)
		{
			int[] charAdvance = new int[numChars];
			for(int ci = 0; ci < numChars; ci++)
			{
				charAdvance[ci] = (edis.readByte() & 0xff);
			}
			setBmData(data, startChar, numChars, charH, charW, charHstep, charWstep, charPerRow, charAdvance);
		}
		else
		{
			setBmData(data, startChar, numChars, charH, charW, charHstep, charWstep, charPerRow, null);
		}
		
		int ci = 0;
		for(int c = startChar; c < (startChar + numChars); c++)
		{
			Glyph glyph = data.getGlyph((char) c);
			int srcX = glyph.srcX;
			int srcY = glyph.srcY;
			
			// ext format is grey-scale
			if(extendedFormat)
			{
				for(int y = 0; y < charH; y++)
				{
					for(int x = 0; x < charW; x++)
					{
						;
						long p = edis.readByte() & 0xff;
						if(p == 1L)
						{
							/* there is no good grey-scale at 0x01 */
							/* so set to full color for legacy/interim format */
							p = 0xFFFFffffL;
						}
						else
						{
							p |= (p << 8);
							p |= (p << 16);
						}
						pixmap.setPixel(srcX + x, srcY + y, (int) (p & 0xFFFFffff));
					}
				}
			}
			else
			{
				for(int y = 0; y < charH; y++)
				{
					for(int x = 0; x < charW; x++)
					{
						int b = edis.readByte() & 0xff;
						pixmap.setPixel(srcX + x, srcY + y, (b == 0 ? 0 : 0xFFFFffff));
					}
				}
			}
			ci++;
		}
		edis.close();
		return pixmap;
	}
	
	public static final void dumpGDFB(InputStream ins) throws IOException
	{
		EndianDataInputStream edis = new EndianDataInputStream(ins);
		edis.order(ByteOrder.BIG_ENDIAN);
		int numChars = edis.readInt();
		if(numChars != (numChars & 0xffff))
		{
			edis.order(ByteOrder.LITTLE_ENDIAN);
			numChars = ((numChars >>> 24) & 0xff) | ((numChars >>> 8) & 0xff00);
		}
		
		int startChar = edis.readInt();
		int charW = edis.readInt();
		int charH = edis.readInt();
		
		int charWstep = nextPowerOf2(charW);
		int charHstep = nextPowerOf2(charH);
		
		System.out.println("// startChar=" + startChar);
		System.out.println("// numChar=" + numChars);
		System.out.println("// charW=" + charW);
		System.out.println("// charH=" + charH);
		
		int numpChars = nextPowerOf2(numChars);
		int totalArea = nextPowerOf2(charHstep * charWstep * numpChars);
		int texRes = Integer.numberOfTrailingZeros(totalArea) + 1;
		texRes /= 2;
		texRes = 1 << texRes;
		int charPerRow = texRes / charWstep;
		
		int ci = 0;
		for(int c = startChar; c < (startChar + numChars); c++)
		{
			System.out.print(" { ");
			for(int y = 0; y < charH; y++)
			{
				int pb = 0;
				for(int x = 0; x < charW; x++)
				{
					int b = edis.readByte() & 0xff;
					pb = (pb << 1) | (b == 0 ? 0 : 1);
				}
				System.out.print(String.format("0x%02X, ", pb));
			}
			System.out.println(" }, // chr=" + c);
			ci++;
		}
		edis.close();
	}
	
	public GdfBitmapFont(BitmapFontData data, TextureRegion region)
	{
		super(data, region, false);
	}

	public static class EndianDataInputStream extends InputStream implements DataInput
	{
		DataInputStream dataIn;
		private ByteBuffer buffer = ByteBuffer.allocate(8);
		ByteOrder order = ByteOrder.BIG_ENDIAN;
		
		public EndianDataInputStream( InputStream stream ){
			dataIn = new DataInputStream( stream );
		}
		
		public EndianDataInputStream order(ByteOrder o){
			order = o;
			return this;
		}
		
		@Override
		public int read(byte[] b) throws IOException {
			return dataIn.read(b);
		}
		
		@Override
		public int read(byte[] b, int off, int len) throws IOException {
			return dataIn.read(b, off, len);
		}
		
		@Deprecated
		@Override
		public String readLine() throws IOException {
			return dataIn.readLine();
		}
		
		@Override
		public boolean readBoolean() throws IOException {
			return dataIn.readBoolean();
		}
		
		@Override
		public byte readByte() throws IOException {
			return dataIn.readByte();
		}
		
		@Override
		public int read() throws IOException {
			return readByte();
		}
		
		@Override
		public boolean markSupported(){
			return dataIn.markSupported();
		}
		
		@Override
		public void mark(int readlimit) {
			dataIn.mark(readlimit);
		}
		
		@Override
		public void reset() throws IOException {
			dataIn.reset();
		}
		
		@Override
		public char readChar() throws IOException {
			return dataIn.readChar();
		}
		
		@Override
		public void readFully(byte[] b) throws IOException {
			dataIn.readFully(b);
		}
		
		@Override
		public void readFully(byte[] b, int off, int len) throws IOException {
			dataIn.readFully(b, off, len);
		}
		
		@Override
		public String readUTF() throws IOException {
			return dataIn.readUTF();
		}
		
		@Override
		public int skipBytes(int n) throws IOException {
			return dataIn.skipBytes(n);
		}
		
		@Override
		public double readDouble() throws IOException {
			long tmp = readLong();
			return Double.longBitsToDouble( tmp );
		}
		
		@Override
		public float readFloat() throws IOException {
			int tmp = readInt();
			return Float.intBitsToFloat( tmp );
		}
		
		@Override
		public int readInt() throws IOException {
			buffer.clear();
			buffer.order( ByteOrder.BIG_ENDIAN )
					.putInt( dataIn.readInt() )
					.flip();
			return buffer.order( order ).getInt();
		}
		
		@Override
		public long readLong() throws IOException {
			buffer.clear();
			buffer.order( ByteOrder.BIG_ENDIAN )
					.putLong( dataIn.readLong() )
					.flip();
			return buffer.order( order ).getLong();
		}
		
		@Override
		public short readShort() throws IOException {
			buffer.clear();
			buffer.order( ByteOrder.BIG_ENDIAN )
					.putShort( dataIn.readShort () )
					.flip();
			return buffer.order( order ).getShort();
		}
		
		@Override
		public int readUnsignedByte() throws IOException {
			return (int)dataIn.readByte();
		}
		
		@Override
		public int readUnsignedShort() throws IOException {
			return (int)readShort();
		}
	}

	public static class AVGA2_8x16
	{
		public static int start = 0;
		public static int height = 16;
		public static int width = 8;
		public static int hstep = 16;
		public static int wstep = 8;

		public static int table[][] = {
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0x81, 0xa5, 0x81, 0x81, 0xbd, 0x99, 0x81, 0x81, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0xff, 0xdb, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0xff, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x6c, 0xfe, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x18, 0x3c, 0x3c, 0xff, 0xe7, 0xff, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x7e, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0x00, 0x00, 0x00, 0x1e, 0x0e, 0x1a, 0x32, 0x78, 0xcc, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3f, 0x33, 0x33, 0x3f, 0x30, 0x30, 0x30, 0x30, 0x70, 0xf0, 0xe0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7f, 0x63, 0x63, 0x7f, 0x63, 0x63, 0x63, 0x63, 0x67, 0xe7, 0xe6, 0xc0, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0xdb, 0x3c, 0x24, 0xe7, 0x24, 0x3c, 0xdb, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfe, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x02, 0x06, 0x0e, 0x1e, 0x3e, 0xfe, 0x3e, 0x1e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7f, 0xdb, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x7c, 0xc6, 0x60, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x0c, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x6c, 0xfe, 0x6c, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x7c, 0x7c, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x7c, 0x7c, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x3c, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x7c, 0xc6, 0xc2, 0xc0, 0x7c, 0x06, 0x06, 0x86, 0xc6, 0x7c, 0x18, 0x18, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0xc2, 0xc6, 0x0c, 0x18, 0x30, 0x60, 0xc6, 0x86, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x06, 0x3c, 0x06, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0c, 0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x60, 0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0x06, 0x06, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x06, 0x06, 0x0c, 0x78, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x0c, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xde, 0xde, 0xde, 0xdc, 0xc0, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x66, 0x66, 0x66, 0x66, 0xfc, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xf8, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xde, 0xc6, 0xc6, 0x66, 0x3a, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xe6, 0x66, 0x66, 0x6c, 0x78, 0x78, 0x6c, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xf0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xde, 0x7c, 0x0c, 0x0e, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x60, 0x38, 0x0c, 0x06, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xd6, 0xfe, 0xee, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x7c, 0x38, 0x38, 0x7c, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0x86, 0x0c, 0x18, 0x30, 0x60, 0xc2, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00 } ,
				 { 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x78, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1c, 0x0c, 0x0c, 0x3c, 0x6c, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xcc, 0x78, 0x00 } ,
				 { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x6c, 0x76, 0x66, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x06, 0x06, 0x00, 0x0e, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c, 0x00 } ,
				 { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x66, 0x6c, 0x78, 0x78, 0x6c, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xd6, 0xd6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0x0c, 0x1e, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x76, 0x66, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0x60, 0x38, 0x0c, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x10, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x30, 0x36, 0x1c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0xf8, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xcc, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0e, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x18, 0x0e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x0c, 0x06, 0x7c, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xcc, 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xcc, 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x38, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc0, 0xc6, 0x7c, 0x06, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x3c, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xc6, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x38, 0x6c, 0x38, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x30, 0x60, 0x00, 0xfe, 0x66, 0x60, 0x7c, 0x60, 0x60, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x76, 0x36, 0x7e, 0xd8, 0xd8, 0x6e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3e, 0x6c, 0xcc, 0xcc, 0xfe, 0xcc, 0xcc, 0xcc, 0xcc, 0xce, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x30, 0x78, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00 } ,
				 { 0x00, 0xc6, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x18, 0x3c, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3c, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0x60, 0xe6, 0xfc, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xf8, 0xcc, 0xcc, 0xf8, 0xc4, 0xcc, 0xde, 0xcc, 0xcc, 0xcc, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0e, 0x1b, 0x18, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0x70, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x30, 0x60, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x30, 0x60, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x30, 0x60, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x76, 0xdc, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x76, 0xdc, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x3c, 0x6c, 0x6c, 0x3e, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60, 0xc0, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xc0, 0xc0, 0xc2, 0xc6, 0xcc, 0x18, 0x30, 0x60, 0xdc, 0x86, 0x0c, 0x18, 0x3e, 0x00, 0x00 } ,
				 { 0x00, 0xc0, 0xc0, 0xc2, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xce, 0x96, 0x3e, 0x06, 0x06, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x3c, 0x3c, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x6c, 0xd8, 0x6c, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x6c, 0x36, 0x6c, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44 } ,
				 { 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa } ,
				 { 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0 } ,
				 { 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0xd8, 0xd8, 0xd8, 0xdc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x78, 0xcc, 0xcc, 0xf8, 0xcc, 0xc6, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0x40, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0xc6, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0xfe, 0xc6, 0x60, 0x30, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xd8, 0xd8, 0xd8, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xc0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x7e, 0x18, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x6c, 0x6c, 0x6c, 0xee, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1e, 0x30, 0x18, 0x0c, 0x3e, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xdb, 0xdb, 0xdb, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x03, 0x06, 0x7e, 0xdb, 0xdb, 0xf3, 0x7e, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1c, 0x30, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x60, 0x30, 0x1c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x7e, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x6c, 0x3c, 0x1c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xd8, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x70, 0xd8, 0x30, 0x60, 0xc8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
		};
	}

	public static class AVGA2_8x14
	{
		public static int start = 0;
		public static int height = 14;
		public static int width = 8;
		public static int hstep = 16;
		public static int wstep = 8;
		/*
		 * file './font-bin/GdfBitmapFont.AVGA2_8x14.bin', filesize 3584bytes, linewidth=14bytes
		 * array created from bin-file by bin2header
		 * bin2header (c) 2013 Nils Stec, <nils.stec@gmail.com>
		 *
		 */
		public static int table[][] = {
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0x81, 0xa5, 0x81, 0x81, 0xbd, 0x99, 0x81, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0xff, 0xdb, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x6c, 0xfe, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x3c, 0xe7, 0xe7, 0xe7, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x7e, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff, 0xff, 0xff, 0xff } ,
				 { 0x00, 0x00, 0x1e, 0x0e, 0x1a, 0x32, 0x78, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3f, 0x33, 0x3f, 0x30, 0x30, 0x30, 0x70, 0xf0, 0xe0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7f, 0x63, 0x7f, 0x63, 0x63, 0x63, 0x67, 0xe7, 0xe6, 0xc0, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0xdb, 0x3c, 0xe7, 0x3c, 0xdb, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xf8, 0xfe, 0xf8, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x02, 0x06, 0x0e, 0x3e, 0xfe, 0x3e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x66, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7f, 0xdb, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x1b, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x7c, 0xc6, 0x60, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x0c, 0xc6, 0x7c, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x7e, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x28, 0x6c, 0xfe, 0x6c, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x7c, 0x7c, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x7c, 0x7c, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x3c, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x7c, 0xc6, 0xc2, 0xc0, 0x7c, 0x06, 0x86, 0xc6, 0x7c, 0x18, 0x18, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0xc2, 0xc6, 0x0c, 0x18, 0x30, 0x60, 0xc6, 0x86, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x02, 0x06, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x06, 0x3c, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0c, 0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x0c, 0x1e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x60, 0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x06, 0x0c, 0x78, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x0c, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xde, 0xde, 0xde, 0xdc, 0xc0, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x66, 0x66, 0x66, 0xfc, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xf8, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xde, 0xc6, 0x66, 0x3a, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xe6, 0x66, 0x6c, 0x6c, 0x78, 0x6c, 0x6c, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xf0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xde, 0x7c, 0x0c, 0x0e, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x60, 0x38, 0x0c, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x10, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x7c, 0x6c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x38, 0x38, 0x38, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0x8c, 0x18, 0x30, 0x60, 0xc2, 0xc6, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x80, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00 } ,
				 { 0x00, 0x30, 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x78, 0x6c, 0x66, 0x66, 0x66, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1c, 0x0c, 0x0c, 0x3c, 0x6c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xcc, 0x78, 0x00 } ,
				 { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x6c, 0x76, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x06, 0x06, 0x00, 0x0e, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c, 0x00 } ,
				 { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xd6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0x0c, 0x1e, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x76, 0x66, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0x70, 0x1c, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x10, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x36, 0x1c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x6c, 0x38, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0xf8, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xcc, 0x18, 0x30, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0e, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x0e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x0c, 0x06, 0x7c, 0x00 } ,
				 { 0x00, 0x00, 0xcc, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xcc, 0xcc, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x38, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x06, 0x3c, 0x00 } ,
				 { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xcc, 0xcc, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x3c, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xc6, 0xc6, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x38, 0x6c, 0x38, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x30, 0x60, 0x00, 0xfe, 0x66, 0x60, 0x7c, 0x60, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0xcc, 0x76, 0x36, 0x7e, 0xd8, 0xd8, 0x6e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x3e, 0x6c, 0xcc, 0xcc, 0xfe, 0xcc, 0xcc, 0xcc, 0xce, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x30, 0x78, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x60, 0x30, 0x18, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xc6, 0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00 } ,
				 { 0x00, 0xc6, 0xc6, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xc6, 0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x18, 0x3c, 0x66, 0x60, 0x60, 0x66, 0x3c, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0xe6, 0xfc, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xf8, 0xcc, 0xcc, 0xf8, 0xc4, 0xcc, 0xde, 0xcc, 0xcc, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0e, 0x1b, 0x18, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0xd8, 0x70, 0x00 } ,
				 { 0x00, 0x18, 0x30, 0x60, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x18, 0x30, 0x60, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x76, 0xdc, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00 } ,
				 { 0x76, 0xdc, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x3c, 0x6c, 0x6c, 0x3e, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xc0, 0xc0, 0xc6, 0xcc, 0xd8, 0x30, 0x60, 0xdc, 0x86, 0x0c, 0x18, 0x3e, 0x00 } ,
				 { 0x00, 0xc0, 0xc0, 0xc6, 0xcc, 0xd8, 0x30, 0x66, 0xce, 0x9e, 0x3e, 0x06, 0x06, 0x00 } ,
				 { 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x3c, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x36, 0x6c, 0xd8, 0x6c, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0xd8, 0x6c, 0x36, 0x6c, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44 } ,
				 { 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa } ,
				 { 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
				 { 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0 } ,
				 { 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f } ,
				 { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0xd8, 0xd8, 0xdc, 0x76, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xfc, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0x40, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0xc6, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0xfe, 0xc6, 0x60, 0x30, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xd8, 0xd8, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xc0, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x7e, 0x18, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x6c, 0x6c, 0xee, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1e, 0x30, 0x18, 0x0c, 0x3e, 0x66, 0x66, 0x66, 0x3c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xdb, 0xdb, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x03, 0x06, 0x7e, 0xdb, 0xdb, 0xf3, 0x7e, 0x60, 0xc0, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x1c, 0x30, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x30, 0x1c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x00, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x00, 0x7e, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
				 { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x7e, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x3c, 0x1c, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0xd8, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x70, 0xd8, 0x30, 0x60, 0xc8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
				 { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
	};
	}

	public static class Ascii_8x8
	{
		public static int start = 0;
		public static int height = 8;
		public static int width = 8;
		public static int hstep = 8;
		public static int wstep = 8;
		public static int table[][] = {
				{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},    /* Ascii 0 */
				{0x3c, 0x42, 0xa5, 0x81, 0xbd, 0x42, 0x3c, 0x00},    /* Ascii 1 */
				{0x3c, 0x7e, 0xdb, 0xff, 0xc3, 0x7e, 0x3c, 0x00},    /* Ascii 2 */
				{0x00, 0xee, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00},    /* Ascii 3 */
				{0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00},    /* Ascii 4 */
				{0x00, 0x3c, 0x18, 0xff, 0xff, 0x08, 0x18, 0x00},    /* Ascii 5 */
				{0x10, 0x38, 0x7c, 0xfe, 0xfe, 0x10, 0x38, 0x00},    /* Ascii 6 */
				{0x00, 0x00, 0x18, 0x3c, 0x18, 0x00, 0x00, 0x00},    /* Ascii 7 */
				{0xff, 0xff, 0xe7, 0xc3, 0xe7, 0xff, 0xff, 0xff},    /* Ascii 8 */
				{0x00, 0x3c, 0x42, 0x81, 0x81, 0x42, 0x3c, 0x00},    /* Ascii 9 */
				{0xff, 0xc3, 0xbd, 0x7e, 0x7e, 0xbd, 0xc3, 0xff},    /* Ascii 10 */
				{0x1f, 0x07, 0x0d, 0x7c, 0xc6, 0xc6, 0x7c, 0x00},    /* Ascii 11 */
				{0x00, 0x7e, 0xc3, 0xc3, 0x7e, 0x18, 0x7e, 0x18},    /* Ascii 12 */
				{0x04, 0x06, 0x07, 0x04, 0x04, 0xfc, 0xf8, 0x00},    /* Ascii 13 */
				{0x0c, 0x0a, 0x0d, 0x0b, 0xf9, 0xf9, 0x1f, 0x1f},    /* Ascii 14 */
				{0x00, 0x92, 0x7c, 0x44, 0xc6, 0x7c, 0x92, 0x00},    /* Ascii 15 */
				{0x00, 0x00, 0x60, 0x78, 0x7e, 0x78, 0x60, 0x00},    /* Ascii 16 */
				{0x00, 0x00, 0x06, 0x1e, 0x7e, 0x1e, 0x06, 0x00},    /* Ascii 17 */
				{0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x18},    /* Ascii 18 */
				{0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00},    /* Ascii 19 */
				{0xff, 0xb6, 0x76, 0x36, 0x36, 0x36, 0x36, 0x00},    /* Ascii 20 */
				{0x7e, 0xc1, 0xdc, 0x22, 0x22, 0x1f, 0x83, 0x7e},    /* Ascii 21 */
				{0x00, 0x00, 0x00, 0x7e, 0x7e, 0x00, 0x00, 0x00},    /* Ascii 22 */
				{0x18, 0x7e, 0x18, 0x18, 0x7e, 0x18, 0x00, 0xff},    /* Ascii 23 */
				{0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00},    /* Ascii 24 */
				{0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x18, 0x00},    /* Ascii 25 */
				{0x00, 0x04, 0x06, 0xff, 0x06, 0x04, 0x00, 0x00},    /* Ascii 26 */
				{0x00, 0x20, 0x60, 0xff, 0x60, 0x20, 0x00, 0x00},    /* Ascii 27 */
				{0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xff, 0x00},    /* Ascii 28 */
				{0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00, 0x00},    /* Ascii 29 */
				{0x00, 0x00, 0x10, 0x38, 0x7c, 0xfe, 0x00, 0x00},    /* Ascii 30 */
				{0x00, 0x00, 0x00, 0xfe, 0x7c, 0x38, 0x10, 0x00},    /* Ascii 31 */
				{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},    /* */
				{0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x30, 0x00},    /* ! */
				{0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},    /* " */
				{0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00},    /* # */
				{0x10, 0x7c, 0xd2, 0x7c, 0x86, 0x7c, 0x10, 0x00},    /* $ */
				{0xf0, 0x96, 0xfc, 0x18, 0x3e, 0x72, 0xde, 0x00},    /* % */
				{0x30, 0x48, 0x30, 0x78, 0xce, 0xcc, 0x78, 0x00},    /* & */
				{0x0c, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},    /* ' */
				{0x10, 0x60, 0xc0, 0xc0, 0xc0, 0x60, 0x10, 0x00},    /* ( */
				{0x10, 0x0c, 0x06, 0x06, 0x06, 0x0c, 0x10, 0x00},    /* ) */
				{0x00, 0x54, 0x38, 0xfe, 0x38, 0x54, 0x00, 0x00},    /* * */
				{0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00},    /* + */
				{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x70},    /* , */
				{0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00},    /* - */
				{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00},    /* . */
				{0x02, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x00},    /* / */
				{0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* 0 */
				{0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x3c, 0x00},    /* 1 */
				{0x7c, 0xc6, 0x06, 0x0c, 0x30, 0x60, 0xfe, 0x00},    /* 2 */
				{0x7c, 0xc6, 0x06, 0x3c, 0x06, 0xc6, 0x7c, 0x00},    /* 3 */
				{0x0e, 0x1e, 0x36, 0x66, 0xfe, 0x06, 0x06, 0x00},    /* 4 */
				{0xfe, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0xfc, 0x00},    /* 5 */
				{0x7c, 0xc6, 0xc0, 0xfc, 0xc6, 0xc6, 0x7c, 0x00},    /* 6 */
				{0xfe, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x60, 0x00},    /* 7 */
				{0x7c, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0x7c, 0x00},    /* 8 */
				{0x7c, 0xc6, 0xc6, 0x7e, 0x06, 0xc6, 0x7c, 0x00},    /* 9 */
				{0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00},    /* : */
				{0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x20, 0x00},    /* }, */
				{0x00, 0x1c, 0x30, 0x60, 0x30, 0x1c, 0x00, 0x00},    /* < */
				{0x00, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x00, 0x00},    /* = */
				{0x00, 0x70, 0x18, 0x0c, 0x18, 0x70, 0x00, 0x00},    /* > */
				{0x7c, 0xc6, 0x0c, 0x18, 0x30, 0x00, 0x30, 0x00},    /* ? */
				{0x7c, 0x82, 0x9a, 0xaa, 0xaa, 0x9e, 0x7c, 0x00},    /* @ */
				{0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x00},    /* A */
				{0xfc, 0xc6, 0xc6, 0xfc, 0xc6, 0xc6, 0xfc, 0x00},    /* B */
				{0x7c, 0xc6, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x00},    /* C */
				{0xf8, 0xcc, 0xc6, 0xc6, 0xc6, 0xcc, 0xf8, 0x00},    /* D */
				{0xfe, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xfe, 0x00},    /* E */
				{0xfe, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0x00},    /* F */
				{0x7c, 0xc6, 0xc0, 0xce, 0xc6, 0xc6, 0x7e, 0x00},    /* G */
				{0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00},    /* H */
				{0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00},    /* I */
				{0x1e, 0x06, 0x06, 0x06, 0xc6, 0xc6, 0x7c, 0x00},    /* J */
				{0xc6, 0xcc, 0xd8, 0xf0, 0xd8, 0xcc, 0xc6, 0x00},    /* K */
				{0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0x00},    /* L */
				{0xc6, 0xee, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0x00},    /* M */
				{0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00},    /* N */
				{0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* O */
				{0xfc, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0xc0, 0x00},    /* P */
				{0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x06},    /* Q */
				{0xfc, 0xc6, 0xc6, 0xfc, 0xc6, 0xc6, 0xc6, 0x00},    /* R */
				{0x78, 0xcc, 0x60, 0x30, 0x18, 0xcc, 0x78, 0x00},    /* S */
				{0xfc, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00},    /* T */
				{0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* U */
				{0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00},    /* V */
				{0xc6, 0xc6, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00},    /* W */
				{0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00},    /* X */
				{0xc3, 0xc3, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x00},    /* Y */
				{0xfe, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0xfe, 0x00},    /* Z */
				{0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00},    /* [ */
				{0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, 0x00},    /* \ */
				{0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00},    /* ] */
				{0x00, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00},    /* ^ */
				{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff},    /* _ */
				{0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},    /* ` */
				{0x00, 0x00, 0x7c, 0x06, 0x7e, 0xc6, 0x7e, 0x00},    /* a */
				{0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xe6, 0xdc, 0x00},    /* b */
				{0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0x7e, 0x00},    /* c */
				{0x06, 0x06, 0x7e, 0xc6, 0xc6, 0xce, 0x76, 0x00},    /* d */
				{0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0x7e, 0x00},    /* e */
				{0x1e, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x00},    /* f */
				{0x00, 0x00, 0x7e, 0xc6, 0xce, 0x76, 0x06, 0x7c},    /* g */
				{0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x00},    /* */
				{0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00},    /* i */
				{0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0xf0},    /* j */
				{0xc0, 0xc0, 0xcc, 0xd8, 0xf0, 0xd8, 0xcc, 0x00},    /* k */
				{0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00},    /* l */
				{0x00, 0x00, 0xcc, 0xfe, 0xd6, 0xc6, 0xc6, 0x00},    /* m */
				{0x00, 0x00, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x00},    /* n */
				{0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* o */
				{0x00, 0x00, 0xfc, 0xc6, 0xc6, 0xe6, 0xdc, 0xc0},    /* p */
				{0x00, 0x00, 0x7e, 0xc6, 0xc6, 0xce, 0x76, 0x06},    /* q */
				{0x00, 0x00, 0x6e, 0x70, 0x60, 0x60, 0x60, 0x00},    /* r */
				{0x00, 0x00, 0x7c, 0xc0, 0x7c, 0x06, 0xfc, 0x00},    /* s */
				{0x30, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x1c, 0x00},    /* t */
				{0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x00},    /* u */
				{0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00},    /* v */
				{0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xfe, 0x6c, 0x00},    /* w */
				{0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00},    /* x */
				{0x00, 0x00, 0xc6, 0xc6, 0xce, 0x76, 0x06, 0x7c},    /* y */
				{0x00, 0x00, 0xfc, 0x18, 0x30, 0x60, 0xfc, 0x00},    /* z */
				{0x0e, 0x18, 0x18, 0x70, 0x18, 0x18, 0x0e, 0x00},    /* { */
				{0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00},    /* | */
				{0xe0, 0x30, 0x30, 0x1c, 0x30, 0x30, 0xe0, 0x00},    /* } */
				{0x00, 0x00, 0x70, 0x9a, 0x0e, 0x00, 0x00, 0x00},    /* ~ */
				{0x00, 0x00, 0x18, 0x3c, 0x66, 0xff, 0x00, 0x00}    /* Ascii 127 */
		};

	}

	public static class Ascii_6x11
	{
		public static int start = 32;
		public static int height = 11;
		public static int width = 6;
		public static int hstep = 16;
		public static int wstep = 16;
		public static int table[][] = {
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0xF8,  0x50,  0xF8,  0x50,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x20,  0x70,  0xA8,  0xA0,  0x70,  0x28,  0xA8,  0x70,  0x20,  0x00 },
				{ 0x00,  0x00,  0x40,  0xA4,  0xA8,  0x58,  0x34,  0x54,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x60,  0x90,  0xA0,  0x40,  0xA8,  0x90,  0x68,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x10,  0x20,  0x40,  0x40,  0x40,  0x20,  0x10,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x10,  0x08,  0x08,  0x08,  0x10,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0xA8,  0x70,  0xA8,  0x20,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x20,  0x20,  0xF8,  0x20,  0x20,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x40,  0x40,  0x80 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0xE0,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x00,  0x00 },
				{ 0x00,  0x00,  0x08,  0x08,  0x10,  0x10,  0x20,  0x20,  0x40,  0x40,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x10,  0x30,  0x10,  0x10,  0x10,  0x10,  0x10,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x08,  0x10,  0x20,  0x40,  0xF8,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x08,  0x30,  0x08,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x10,  0x30,  0x50,  0x90,  0xF8,  0x10,  0x10,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF8,  0x80,  0xF0,  0x08,  0x08,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x80,  0xF0,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF8,  0x08,  0x08,  0x10,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x88,  0x70,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x20,  0x00,  0x00,  0x00,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x20,  0x00,  0x00,  0x00,  0x20,  0x20,  0x40 },
				{ 0x00,  0x00,  0x00,  0x10,  0x20,  0x40,  0x20,  0x10,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0xF8,  0x00,  0xF8,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x40,  0x20,  0x10,  0x20,  0x40,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x08,  0x10,  0x20,  0x00,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0xE8,  0xA8,  0xF0,  0x80,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF0,  0x88,  0x88,  0xF0,  0x88,  0x88,  0xF0,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x80,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF0,  0x88,  0x88,  0x88,  0x88,  0x88,  0xF0,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0x80,  0x80,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x80,  0x98,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x08,  0x08,  0x08,  0x08,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x90,  0xA0,  0xC0,  0xA0,  0x90,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x80,  0x80,  0x80,  0x80,  0x80,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0xD8,  0xA8,  0x88,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0xC8,  0xA8,  0x98,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF0,  0x88,  0x88,  0xF0,  0x80,  0x80,  0x80,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x08,  0x00 },
				{ 0x00,  0x00,  0xF0,  0x88,  0x88,  0xF0,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x80,  0x70,  0x08,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF8,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x50,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0xA8,  0xD8,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x50,  0x20,  0x20,  0x20,  0x50,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x88,  0x88,  0x50,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF8,  0x08,  0x10,  0x20,  0x40,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x00,  0x00,  0x30,  0x20,  0x20,  0x20,  0x20,  0x20,  0x30,  0x00,  0x00 },
				{ 0x00,  0x00,  0x40,  0x40,  0x20,  0x20,  0x10,  0x10,  0x08,  0x08,  0x00 },
				{ 0x00,  0x00,  0x30,  0x10,  0x10,  0x10,  0x10,  0x10,  0x30,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0xFC,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x10,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x00,  0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x78,  0x00,  0x00 },
				{ 0x00,  0x00,  0x08,  0x08,  0x78,  0x88,  0x88,  0x88,  0x78,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
				{ 0x00,  0x00,  0x18,  0x20,  0x70,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x78,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
				{ 0x00,  0x00,  0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0xC0 },
				{ 0x00,  0x00,  0x80,  0x80,  0x90,  0xA0,  0xE0,  0x90,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0xF0,  0xA8,  0xA8,  0xA8,  0xA8,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0xB0,  0xC8,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x80,  0x80 },
				{ 0x00,  0x00,  0x00,  0x00,  0x78,  0x88,  0x88,  0x88,  0x78,  0x08,  0x08 },
				{ 0x00,  0x00,  0x00,  0x00,  0xB0,  0xC8,  0x80,  0x80,  0x80,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x78,  0x80,  0x70,  0x08,  0xF0,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x20,  0x70,  0x20,  0x20,  0x20,  0x18,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x88,  0x88,  0x88,  0x50,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0xA8,  0xA8,  0xA8,  0xA8,  0x50,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x88,  0x50,  0x20,  0x50,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
				{ 0x00,  0x00,  0x00,  0x00,  0xF8,  0x10,  0x20,  0x40,  0xF8,  0x00,  0x00 },
				{ 0x00,  0x08,  0x10,  0x10,  0x10,  0x20,  0x10,  0x10,  0x10,  0x08,  0x00 },
				{ 0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00 },
				{ 0x00,  0x40,  0x20,  0x20,  0x20,  0x10,  0x20,  0x20,  0x20,  0x40,  0x00 },
				{ 0x00,  0x00,  0x68,  0xB0,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x10,  0x10,  0x20,  0x00 },
				{ 0x18,  0x20,  0x20,  0x20,  0x70,  0x20,  0x20,  0x20,  0x20,  0x20,  0xC0 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x48,  0x48,  0x90,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0xA8,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x70,  0x20,  0x20,  0x20,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x20,  0x20,  0x70,  0x20,  0x20,  0x70,  0x20,  0x20,  0x00 },
				{ 0x00,  0x20,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x40,  0xA8,  0xB0,  0x54,  0x6A,  0xAA,  0x94,  0x00,  0x00 },
				{ 0x50,  0x20,  0x70,  0x88,  0x80,  0x70,  0x08,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x20,  0x40,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x7C,  0x90,  0x90,  0x98,  0x90,  0x90,  0x7C,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x10,  0x20,  0x30,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x30,  0x10,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x28,  0x50,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x28,  0x28,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x70,  0xF8,  0xF8,  0xF8,  0x70,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x70,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0xFC,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x28,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0xF4,  0x5C,  0x5C,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x50,  0x20,  0x00,  0x78,  0x80,  0x70,  0x08,  0xF0,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x20,  0x10,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x50,  0xA8,  0xB8,  0xA0,  0x58,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x50,  0x00,  0x88,  0x88,  0x88,  0x50,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x10,  0x00,  0x10,  0x10,  0x10,  0x10,  0x10,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x20,  0x70,  0xA8,  0xA0,  0xA8,  0x70,  0x20,  0x00 },
				{ 0x00,  0x60,  0x90,  0x80,  0xE0,  0x80,  0x80,  0x88,  0xF0,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x60,  0x90,  0x90,  0x60,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x88,  0x50,  0xF8,  0x20,  0xF8,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x20,  0x20,  0x20,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x00 },
				{ 0x70,  0x88,  0x48,  0xA0,  0x90,  0x48,  0x28,  0x90,  0x88,  0x70,  0x00 },
				{ 0x00,  0x00,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x38,  0x44,  0x9A,  0xA2,  0x9A,  0x44,  0x38,  0x00,  0x00 },
				{ 0x00,  0x00,  0x38,  0x48,  0x48,  0x38,  0x00,  0x78,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x48,  0x90,  0x90,  0x48,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0xF8,  0x08,  0x08,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x78,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x38,  0x44,  0xBA,  0xAA,  0xB2,  0xAA,  0x44,  0x38,  0x00,  0x00 },
				{ 0x00,  0x00,  0x78,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x30,  0x48,  0x48,  0x30,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x20,  0x20,  0xF8,  0x20,  0x20,  0xF8,  0x00,  0x00 },
				{ 0x60,  0x90,  0x20,  0x40,  0xF0,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x60,  0x10,  0x30,  0x10,  0x60,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x10,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x90,  0x90,  0x90,  0x90,  0xE8,  0x80,  0x80 },
				{ 0x00,  0x78,  0xA8,  0xA8,  0xA8,  0x78,  0x28,  0x28,  0x28,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x30,  0x30,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x20,  0x10,  0x60 },
				{ 0x20,  0x60,  0x20,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x30,  0x48,  0x48,  0x30,  0x00,  0x78,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x00,  0x90,  0x48,  0x48,  0x90,  0x00,  0x00 },
				{ 0x20,  0x60,  0x20,  0x20,  0x00,  0xF8,  0x20,  0x60,  0xF0,  0x20,  0x20 },
				{ 0x20,  0x60,  0x20,  0x20,  0x00,  0xF8,  0x60,  0x90,  0x20,  0x40,  0xF0 },
				{ 0x60,  0x10,  0x30,  0x10,  0x60,  0xF8,  0x20,  0x60,  0xF0,  0x20,  0x20 },
				{ 0x00,  0x00,  0x20,  0x00,  0x20,  0x40,  0x80,  0x88,  0x70,  0x00,  0x00 },
				{ 0x40,  0x20,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
				{ 0x20,  0x40,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
				{ 0x20,  0x50,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
				{ 0x68,  0xB0,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
				{ 0x50,  0x00,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
				{ 0x20,  0x50,  0x20,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x00,  0x7C,  0x90,  0x90,  0xF8,  0x90,  0x90,  0x9C,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x80,  0x88,  0x70,  0x20,  0x40 },
				{ 0x40,  0x20,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x10,  0x20,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x20,  0x50,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x50,  0x00,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
				{ 0x40,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x10,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x20,  0x50,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x50,  0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x78,  0x44,  0x44,  0xE4,  0x44,  0x44,  0x78,  0x00,  0x00 },
				{ 0x68,  0xB0,  0x00,  0x88,  0xC8,  0xA8,  0x98,  0x88,  0x88,  0x00,  0x00 },
				{ 0x40,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x10,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x20,  0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x68,  0xB0,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x50,  0x20,  0x50,  0x00,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x70,  0x88,  0x98,  0xA8,  0xC8,  0x88,  0x70,  0x00,  0x00 },
				{ 0x40,  0x20,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x10,  0x20,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x20,  0x50,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x50,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x10,  0x20,  0x88,  0x88,  0x88,  0x50,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x80,  0x80,  0x00,  0x00 },
				{ 0x00,  0x30,  0x48,  0x88,  0x90,  0x90,  0x88,  0x88,  0xB0,  0x80,  0x00 },
				{ 0x00,  0x20,  0x10,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x10,  0x20,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x20,  0x50,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x68,  0xB0,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x30,  0x48,  0x30,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x70,  0xA8,  0xB8,  0xA0,  0x78,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x78,  0x20,  0x40 },
				{ 0x00,  0x40,  0x20,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
				{ 0x00,  0x10,  0x20,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
				{ 0x00,  0x20,  0x50,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
				{ 0x00,  0x40,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x10,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x20,  0x50,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
				{ 0x00,  0x20,  0x78,  0x10,  0x18,  0x28,  0x48,  0x48,  0x30,  0x00,  0x00 },
				{ 0x00,  0x68,  0xB0,  0x00,  0xB0,  0xC8,  0x88,  0x88,  0x88,  0x00,  0x00 },
				{ 0x00,  0x40,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x10,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x20,  0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x68,  0xB0,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x20,  0x00,  0xF8,  0x00,  0x20,  0x00,  0x00,  0x00 },
				{ 0x00,  0x00,  0x00,  0x00,  0x70,  0x98,  0xA8,  0xC8,  0x70,  0x00,  0x00 },
				{ 0x00,  0x40,  0x20,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x10,  0x20,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x20,  0x50,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x00,  0x00,  0x50,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
				{ 0x10,  0x20,  0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
				{ 0x00,  0x00,  0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x80,  0x80 },
				{ 0x00,  0x00,  0x50,  0x00,  0x88,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
		};


	}
}
